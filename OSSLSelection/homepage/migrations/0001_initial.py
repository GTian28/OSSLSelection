# Generated by Django 2.0.5 on 2021-11-28 14:27

import ckeditor_uploader.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutLicense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alicense_title', models.CharField(max_length=250)),
                ('alicense_description', models.CharField(blank=True, max_length=2500, null=True)),
                ('alicense_body', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
            ],
            options={
                'ordering': ('alicense_title',),
            },
        ),
        migrations.CreateModel(
            name='BusinessModel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('company', models.CharField(max_length=250)),
                ('project', models.CharField(max_length=250)),
                ('domain', models.CharField(max_length=1000)),
                ('source', models.CharField(max_length=250)),
                ('business_model', models.CharField(max_length=250)),
                ('license', models.CharField(max_length=250)),
                ('license_type', models.CharField(max_length=250)),
            ],
            options={
                'ordering': ('company',),
            },
        ),
        migrations.CreateModel(
            name='FQAList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spdx', models.CharField(max_length=250)),
                ('question', models.TextField()),
                ('answer', models.CharField(max_length=20000)),
            ],
            options={
                'ordering': ('spdx',),
            },
        ),
        migrations.CreateModel(
            name='LicenseList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('licensename', models.CharField(max_length=250)),
                ('spdx', models.CharField(max_length=250)),
                ('category', models.CharField(max_length=250)),
                ('license_info', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('OSIapproved', models.BooleanField()),
                ('FSFapproved', models.BooleanField()),
            ],
            options={
                'ordering': ('licensename',),
            },
        ),
        migrations.CreateModel(
            name='LicenseTerms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spdx', models.CharField(max_length=250)),
                ('license_info', models.BooleanField()),
                ('preamble', models.BooleanField()),
                ('definitions', models.BooleanField()),
                ('instructions', models.BooleanField()),
                ('disclaimer', models.BooleanField()),
                ('copyright_l', models.BooleanField()),
                ('trademark_l', models.BooleanField()),
                ('termination_authorization', models.BooleanField()),
                ('law', models.IntegerField()),
                ('copyleft', models.IntegerField()),
                ('attribution', models.BooleanField()),
                ('Strengthen_attribution', models.BooleanField()),
                ('modification', models.BooleanField()),
                ('internet_action', models.BooleanField()),
                ('patent_lice', models.BooleanField()),
                ('patent_anti', models.BooleanField()),
                ('patent_cant', models.BooleanField()),
                ('acceptance', models.BooleanField()),
                ('law_info', models.CharField(default='æ— ', max_length=250)),
            ],
            options={
                'ordering': ('spdx',),
            },
        ),
    ]
